<link rel="import" href="../../../bower_components/polymer/polymer-element.html" />
<link rel="import" href="../lt-mixin.html" />
<link rel="import" href="./lt-search.html" />
   <dom-module id="lt-menu">
       <template>
           <style include="lt-style">
               :host {
                  flex-flow: row nowrap;
                  justify-content: center;
                  align-items: center;

               }
               #container{
                 width: 100%;
                 padding: 0 20px;
                 box-sizing: border-box;
                 display: flex;
                 flex-flow: row nowrap;
                 justify-content: space-between;
                 align-items: center;
                 transition: transform .3s
               }
               #toggleBtn{
                 width: 40px;
                 height: 40px;
                 z-index: 3;
                 fill:#fff;
                 display: none;
                 cursor: pointer;
               }
               #menuContainer{
                 display: inline-block;
                 width: auto;
               }
               .menuItem{
                 text-decoration: none;
                 color:rgba(255,255,255,0.5);
                 display: inline-block;
                 padding: 9px 25px;
                 font-size: 1rem;
                 font-weight: 400;
                 transition: opacity .2s;
                 position: relative;
                 box-sizing: border-box;
               }
               .menuItem.iron-selected{
                    color: #fff;
               }
               .menuItem.iron-selected::after{
                    left: 20%;
                    content: "";
                    position: absolute;
                    bottom: 0;
                    width: 60%;
                    height: 2px;
                    background: var(--app-primary-orange);
               }
               #container.mobile .menuItem.iron-selected::after{
                    left: 0;
                    width: 100%;
               }
               .menuItem + .menuItem{
                 border-left: 1px solid rgba(255,255,255,0.3);
               }
               #ripple{
                 position: fixed;
                 top: 5px;
                 border-radius: 50%;
                 width: 40px;
                 height: 40px;
                 background: var(--app-header-color);
                 transform: scale(0);
                 transition: transform .3s;
                 z-index: -1;
               }
               #ripple.open{
                 transform: scale(42);
               }
               #container.mobile{
                 position: absolute;
                 left: 0;
                 top: 0;
                 width:100%;
                 height: 100vh;
                 margin-top: 60px;
                 box-sizing: border-box;
                 flex-flow: column nowrap;
                 transform: translateX(-100vw);
                 justify-content: flex-start;
                 z-index: 1;
               }
               #container.mobile #menuContainer{
                 width: 100%;
               }
               #container.mobile.open{
                 transform: translateX(0);
               }
               #container.mobile .menuItem{
                 width: 100%;
               }
               #container.mobile .menuItem + .menuItem{
                 border-left: none;
                 border-top: 1px solid rgba(255,255,255,.3);
               }
               #toggleBtn.mobile{
                 display: block;
               }
           </style>
        <div id="toggleBtn" on-click="toggle">
            <svg viewBox="0 0 24 24">
              <g>
                  <path d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"/>
              </g>
            </svg>
        </div>
        <div id="container">
            <div id="menuContainer">
                <iron-selector attr-For-Selected="page" selected="{{selectPage}}" fallback-selection="carPage" on-click="toggle">
                    <a href="?lang=[[language]]#/home" class="menuItem" page="carPage">买车</a>
                    <a href="?lang=[[language]]#/product" class="menuItem" page="productPage">商品</a>
                    <!-- <a href="?lang=[[language]]#/download" class="menuItem" page="downloadPage">行动端</a> -->
                </iron-selector>
             </div>
            <lt-search mobile="{{mobile}}" on-close-menu="_closeMenu"></lt-search>
        </div>
        <div id="ripple">

        </div>
       </template>

       <script>
           /**
            * @customElement
            * @polymer
            */
           class ltMenu extends ltMixin(Polymer.Element) {
               static get is() { return 'lt-menu'; }
               static get properties() {
                   return {
                     selectPage:{
                       type:String,
                       // observer:'pageListen'
                     },
                     page:{
                       type:String,
                       observer:'pageListen'
                     },
                     animateItem:{type:Array},
                     opened:{
                       type:Boolean,
                       value:false,
                       observer:'searchOpenHandler'
                     },
                     mobileMenuOpen:{type:Boolean, value:false,observer:'mobileMenuOpenHandler'},
                     mobile:{type:Boolean,value:false,observer:'responsiveHandler'}
                   }
               }
               _closeMenu (e){
                this.mobileMenuOpen = false;
               }
               ready(){
                 super.ready();
                 this.animateItem  = this.shadowRoot.querySelectorAll('.menuItem');
               }
               pageListen (val) {
                if (val === 'product' || val === 'product-detail') {
                  this.selectPage = 'productPage'
                }else {
                  this.selectPage = 'carPage'
                }
               }
               pageChange(_newPage,_oldPage){
                 this.$.container.classList.remove('open');
                 this.$.ripple.style.transform = '';
                 if(_newPage && this.$[_newPage]){
                   this.$[_newPage].classList.add('selected');
                 }
                 if(_oldPage && this.$[_oldPage]){
                   this.$[_oldPage].classList.remove('selected');
                 }
               }
               responsiveHandler(boo){
                 if(boo){
                   this.$.container.classList.add('mobile');
                   this.$.toggleBtn.classList.add('mobile');
                 }else{
                   this.$.container.classList.remove('mobile');
                   this.$.toggleBtn.classList.remove('mobile');
                   this.$.container.classList.remove('open');
                   this.$.ripple.style.transform = '';
                 }
               }
               searchOpenHandler(boo){
                 if(boo){
                   this.openSearch();
                 }else{
                   this.closeSearch();
                 }
               }
               toggle(){
                  if(this.mobile){
                    this.mobileMenuOpen = !this.mobileMenuOpen;
                  }
               }
               mobileMenuOpenHandler(boo){
                 if(boo){
                   let winH = window.innerHeight,
                      winW  = window.innerWidth;
                  let r = Math.sqrt((winH * winH) + (winW * winW));
                  let  times = (r/20).toFixed(0);
                  this.$.container.classList.add('open');
                  this.$.ripple.style.transform = 'scale(' + times +')';
                 }else{
                   this.$.container.classList.remove('open');
                   this.$.ripple.style.transform = '';
                 }
               }
               openSearch(){
                 let _openSearch = anime({
                   targets:this.animateItem,
                   opacity:0,
                   transletX:[0,-50],
                   duration:300,
                   delay: function(target, index) {
                    // 100ms delay multiplied by every div index, in ascending order
                    return index * 50;
                  }.bind(this),
                  complete:function(){
                    // this.$.menuContainer.style.display = 'none';
                  }.bind(this)
                 });
               }
               closeSearch(){
                 let _closeSearch = anime({
                   targets:this.animateItem,
                   opacity:1,
                   transletX:[-50,0],
                   duration:100,
                   delay: function(target, index) {
                    // 100ms delay multiplied by every div index, in ascending order
                    return index * 100;
                  }.bind(this),
                  begin:function(){
                    this.$.menuContainer.style.display = 'inline-block';
                  }.bind(this)
                 })
               }
           }

           window.customElements.define(ltMenu.is, ltMenu);
       </script>
   </dom-module>
